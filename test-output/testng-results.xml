<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-11-03T12:04:58 AST" name="Default suite" finished-at="2021-11-03T12:05:12 AST" duration-ms="14376">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.TestNGRunner@5cee5251]" name="runScenario" class="cucumber.api.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2021-11-03T12:04:58 AST" name="Default test" finished-at="2021-11-03T12:05:12 AST" duration-ms="14376">
      <class name="runner.TestNGRunner">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:runner.TestNGRunner@5cee5251]" started-at="2021-11-03T12:04:58 AST" name="setUpClass" finished-at="2021-11-03T12:04:58 AST" duration-ms="76" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:runner.TestNGRunner@5cee5251]" started-at="2021-11-03T12:04:58 AST" name="beforeMethod" finished-at="2021-11-03T12:04:58 AST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="runScenario(cucumber.api.testng.PickleEventWrapper, cucumber.api.testng.CucumberFeatureWrapper)[pri:0, instance:runner.TestNGRunner@5cee5251]" started-at="2021-11-03T12:04:58 AST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-11-03T12:05:11 AST" duration-ms="13560" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["LEts pass the second one"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["This is the first sceneairos"]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:819)
at org.testng.Assert.assertEquals(Assert.java:829)
at stepDefinition.TestFeatures.search_for(TestFeatures.java:59)
at âœ½.I search for test(src/test/resources/testFeatures/Test Feature 1.feature:9)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runner.TestNGRunner@5cee5251]" started-at="2021-11-03T12:05:11 AST" name="tearDownClass" finished-at="2021-11-03T12:05:12 AST" duration-ms="399" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
        <test-method is-config="true" signature="get()[pri:0, instance:runner.TestNGRunner@5cee5251]" started-at="2021-11-03T12:05:12 AST" name="get" finished-at="2021-11-03T12:05:12 AST" duration-ms="298" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get -->
      </class> <!-- runner.TestNGRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
